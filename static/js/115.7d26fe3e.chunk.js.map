{"version":3,"file":"static/js/115.7d26fe3e.chunk.js","mappings":"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","sources":["hooks/reduxHooks.ts","redux/selectors/trackingSelectors.ts","components/Tracking/TrackingForm/TrackingForm.styled.ts","components/Tracking/TrackingForm/TrackingForm.tsx","components/Tracking/TrackingData/TrackingData.styled.ts","components/Tracking/TrackingData/TrackingData.tsx","redux/selectors/billOfLadingSelectors.ts","components/Tracking/TrackingStory/TrackingStory.styled.ts","components/Tracking/TrackingStory/TrackingStory.tsx","pages/PageCheckBillOfLading/PageCheckBillOfLading.styles.ts","pages/PageCheckBillOfLading/PageCheckBillOfLading.tsx"],"sourcesContent":["import { useDispatch, useSelector, TypedUseSelectorHook } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"../redux/store/store\";\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { IState } from \"../../types/redux.types\";\nimport { ObjectData } from \"../../types/redux.types\";\n\nexport const trackingDataSelector = (state: IState): ObjectData | [] =>\n  state.trackingState.trackingData.data;\n\nexport const trackingLoadingSelector = (state: IState): boolean =>\n  state.trackingState.loading;\n","import { styled } from \"@mui/system\";\nimport { TextField } from \"@mui/material\";\n\nexport const Form = styled(\"form\")({\n  marginBottom: \"3rem\",\n  width: \"100%\",\n  maxWidth: \"468px\",\n  minHeight: \"200px\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\",\n});\n\nexport const Input = styled(TextField)({\n  width: \"100%\",\n  maxWidth: \"400px\",\n\n  \"@media screen and (min-width:1100px)\": {\n    maxWidth: \"600px\",\n  },\n\n  \"&.MuiTextField-root\": {\n    \"@media screen and (max-width:767px)\": {\n      marginBottom: \"1rem\",\n    },\n  },\n});\n","import React from \"react\";\nimport { ITrackingFormProps } from \"../../../types/tracking-components.types\";\nimport PrimaryButton from \"../../Common/PrimaryButton/PrimaryButton\";\nimport * as Styled from \"./TrackingForm.styled\";\n\nconst TrackingForm: React.FC<ITrackingFormProps> = ({\n  onChange,\n  billOfLading,\n  submitForm,\n  sidebarHandler,\n}: ITrackingFormProps): JSX.Element => {\n  return (\n    <Styled.Form onSubmit={(event) => submitForm(event)}>\n      <Styled.Input\n        variant=\"outlined\"\n        label=\"Введiть ТТН\"\n        type=\"number\"\n        value={billOfLading}\n        onChange={(event) => onChange(event)}\n      />\n\n      <PrimaryButton text=\"Отримати статус ТТН\" type=\"submit\" />\n\n      <PrimaryButton\n        text=\"Iсторія введенних ТТН\"\n        type=\"button\"\n        onClick={() => sidebarHandler()}\n      />\n    </Styled.Form>\n  );\n};\n\nexport default TrackingForm;\n","import { styled } from \"@mui/system\";\nimport { CardContent, Card, Box, Typography } from \"@mui/material\";\n\nimport { COLORS } from \"../../../services/consts/theme/colors.conts\";\n\nexport const MyCard = styled(Card)({\n  width: \"100%\",\n  minHeight: \"312px\",\n  maxWidth: \"468px\",\n});\n\nexport const MyCardContent = styled(CardContent)({\n  \"& :not(:last-child)\": {\n    marginBottom: \"0.8rem\",\n  },\n});\n\nexport const MyTextWrapper = styled(Box)({\n  borderBottom: \"1px solid rgba(0, 0, 0, 0.6)\",\n  paddingBottom: \"5px\",\n});\n\nexport const MyTitle = styled(Typography)({\n  color: `${COLORS.accentColor}`,\n  display: \"flex\",\n  alignItems: \"center\",\n\n  \"&.MuiTypography-root\": {\n    fontSize: \"20px\",\n  },\n});\n","import React from \"react\";\nimport { Box, Button, CardActions, Typography } from \"@mui/material\";\nimport { useAppSelector } from \"../../../hooks/reduxHooks\";\nimport { trackingDataSelector } from \"../../../redux/selectors/trackingSelectors\";\nimport DescriptionIcon from \"@mui/icons-material/Description\";\nimport SystemUpdateAltIcon from \"@mui/icons-material/SystemUpdateAlt\";\nimport PinDropIcon from \"@mui/icons-material/PinDrop\";\nimport NumbersIcon from \"@mui/icons-material/Numbers\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\n\nimport * as Styled from \"./TrackingData.styled\";\n\nconst TrackingData: React.FC<any> = ({ setShowBillOfLadingStatus }: any) => {\n  const trackingData = useAppSelector(trackingDataSelector);\n\n  const { WarehouseSender, Status, WarehouseRecipient, StatusCode, Number } =\n    trackingData[0] || {};\n\n  const deliveryStatus =\n    StatusCode === \"3\" ? `ТТН: ${Number} Не знайдений у базi...` : ` ${Status}`;\n\n  return (\n    <Styled.MyCard>\n      <CardActions sx={{ justifyContent: \"flex-end\" }}>\n        <Button\n          onClick={() => setShowBillOfLadingStatus(false)}\n          endIcon={<VisibilityOffIcon />}\n        >\n          Приховати\n        </Button>\n      </CardActions>\n      <Styled.MyCardContent>\n        {/* BillOFLading */}\n        <Styled.MyTextWrapper>\n          <Styled.MyTitle>\n            <NumbersIcon sx={{ mr: \"10px\" }} /> ТТН:\n          </Styled.MyTitle>\n          <Typography variant=\"h6\" component={\"p\"}>\n            {Number}\n          </Typography>\n        </Styled.MyTextWrapper>\n\n        {/* Delivery Status */}\n        <Styled.MyTextWrapper>\n          <Styled.MyTitle>\n            <DescriptionIcon sx={{ mr: \"10px\" }} /> Статус доставки:\n          </Styled.MyTitle>\n          <Typography variant=\"h6\" component={\"p\"}>\n            {deliveryStatus}\n          </Typography>\n        </Styled.MyTextWrapper>\n\n        {/* Sender */}\n        <Styled.MyTextWrapper>\n          <Styled.MyTitle>\n            <SystemUpdateAltIcon sx={{ mr: \"10px\" }} /> Відправник:\n          </Styled.MyTitle>\n          <Typography variant=\"h6\" component={\"p\"}>\n            {WarehouseSender || \"Інформація відсутня...\"}\n          </Typography>\n        </Styled.MyTextWrapper>\n\n        {/* Recipient */}\n        <Box>\n          <Styled.MyTitle>\n            <PinDropIcon sx={{ mr: \"10px\" }} /> Одержувач:\n          </Styled.MyTitle>\n          <Typography variant=\"h6\" component={\"p\"}>\n            {WarehouseRecipient || \"Інформація відсутня...\"}\n          </Typography>\n        </Box>\n      </Styled.MyCardContent>\n    </Styled.MyCard>\n  );\n};\n\nexport default TrackingData;\n","import { IState } from \"../../types/redux.types\";\n\nexport const billOfLadingDataSelector = (state: IState): [] | string[] =>\n  state.billOfLadingState.billOfLadingStory;\n","import { styled } from \"@mui/system\";\nimport { CardContent, Box, Drawer } from \"@mui/material\";\n\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\n\nimport { COLORS } from \"../../../services/consts/theme/colors.conts\";\n\nexport const MyCardContent = styled(CardContent)({\n  display: \"flex\",\n  flexWrap: \"nowrap\",\n  flexDirection: \"column\",\n\n  overflowY: \"auto\",\n  overflowX: \"hidden\",\n\n  width: \"100%\",\n  minWidth: \"320px\",\n});\n\nexport const ActionsWrapper = styled(Box)({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  marginBottom: \"2rem\",\n});\n\nexport const MyIconArrowBackSidebar = styled(ArrowForwardIosIcon)({\n  color: `${COLORS.primaryColor}`,\n  transition: \"all 250ms linear\",\n  \"&:hover\": {\n    color: `${COLORS.accentColor}`,\n  },\n});\n\nexport const MyDrawer = styled(Drawer)({\n  \"&.MuiDrawer-root\": {\n    zIndex: 9999999,\n  },\n});\n\nexport const MyStoryWrapper = styled(Box)({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  \"&:not(last-child)\": {\n    marginBottom: \"1rem\",\n  },\n});\n","import React from \"react\";\nimport { nanoid } from \"@reduxjs/toolkit\";\n\nimport { useAppDispatch, useAppSelector } from \"../../../hooks/reduxHooks\";\nimport { clearTBillOfLadingStory } from \"../../../redux/slices/billOfLadingSlice\";\nimport { billOfLadingDataSelector } from \"../../../redux/selectors/billOfLadingSelectors\";\n\nimport { ITrackingStoryProps } from \"../../../types/tracking-components.types\";\n\nimport { Typography, Button, Divider, IconButton } from \"@mui/material\";\n\nimport PrimaryButton from \"../../Common/PrimaryButton/PrimaryButton\";\n\nimport * as Styled from \"./TrackingStory.styled\";\n\nconst TrackingStory: React.FC<ITrackingStoryProps> = ({\n  getBillOfLadingStatusFromTrackingStory,\n  deleteBillOfLadingFromTrackingStory,\n  sidebarHandler,\n  isSideBarOpen,\n}: ITrackingStoryProps) => {\n  const dispatch = useAppDispatch();\n\n  const story = useAppSelector(billOfLadingDataSelector);\n\n  return (\n    <Styled.MyDrawer anchor=\"right\" open={isSideBarOpen} variant=\"temporary\">\n      <Styled.MyCardContent>\n        <Styled.ActionsWrapper>\n          <IconButton onClick={() => sidebarHandler()} aria-label=\"hide\">\n            <Styled.MyIconArrowBackSidebar />\n          </IconButton>\n\n          <PrimaryButton\n            text=\"Очистити iсторію ТТН\"\n            type=\"button\"\n            onClick={() => dispatch(clearTBillOfLadingStory())}\n          />\n        </Styled.ActionsWrapper>\n\n        <Typography variant=\"h5\" component=\"p\" gutterBottom>\n          Історія:\n        </Typography>\n        {story.length > 0 && (\n          <Typography color={\"darkgray\"} component=\"p\" sx={{ mb: \"2rem\" }}>\n            * натисніть на ТТН, щоб отримати інформацію\n          </Typography>\n        )}\n\n        {story.map((billOfLading: string) => (\n          <Styled.MyStoryWrapper key={nanoid()}>\n            <Button\n              onClick={() =>\n                getBillOfLadingStatusFromTrackingStory(billOfLading)\n              }\n            >\n              <Typography variant=\"body1\">ТТН : {billOfLading}</Typography>\n            </Button>\n            <PrimaryButton\n              type=\"button\"\n              text=\"Видалити\"\n              onClick={() => deleteBillOfLadingFromTrackingStory(billOfLading)}\n            />\n          </Styled.MyStoryWrapper>\n        ))}\n\n        <Divider />\n      </Styled.MyCardContent>\n    </Styled.MyDrawer>\n  );\n};\n\nexport default TrackingStory;\n","import { styled } from \"@mui/system\";\nimport { Container } from \"@mui/material\";\n\nexport const MyContainer = styled(Container)({\n  paddingTop: \"3rem\",\n  paddingBottom: \"3rem\",\n\n  \"&.MuiContainer-root\": {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n});\n","import React, { FC, useState } from \"react\";\n\nimport { useAppDispatch, useAppSelector } from \"../../hooks/reduxHooks\";\n\nimport {\n  setTBillOfLadingStory,\n  deleteTBillOfLadingStory,\n} from \"../../redux/slices/billOfLadingSlice\";\n\nimport { getTrackingStatus } from \"../../redux/operations/trackingOperations\";\n\nimport { trackingDataSelector } from \"../../redux/selectors/trackingSelectors\";\n\nimport {\n  EventOnChange,\n  EventOnSubmit,\n} from \"../../types/tracking-components.types\";\n\nimport {\n  TrackingForm,\n  TrackingData,\n  TrackingStory,\n} from \"../../components/Tracking\";\n\nimport { Header } from \"../../components/Common\";\n\nimport * as Styled from \"./PageCheckBillOfLading.styles\";\n\nimport { Typography } from \"@mui/material\";\n\nimport { toast } from \"react-toastify\";\n\nconst PageCheckBillOfLading: FC = () => {\n  const [billOfLading, setBillOfLading] = useState(\"\");\n  const [isSideBarOpen, setIsSideBarOpen] = useState(false);\n  const [showBillOfLadingStatus, setShowBillOfLadingStatus] =\n    useState<boolean>(true);\n\n  const dispatch = useAppDispatch();\n\n  const trackingData = useAppSelector(trackingDataSelector);\n\n  const onChange = (event: EventOnChange) => {\n    setBillOfLading(event.currentTarget.value);\n  };\n\n  const submitForm = (event: EventOnSubmit) => {\n    event.preventDefault();\n    const regex = /^\\d{14}$/;\n\n    if (!regex.test(billOfLading))\n      return toast.warn(\"ТТН повинен складатися з 14 цифр\");\n\n    setBillOfLading(\"\");\n    setShowBillOfLadingStatus(true);\n    dispatch(setTBillOfLadingStory(billOfLading));\n    dispatch(getTrackingStatus(billOfLading));\n  };\n\n  const getBillOfLadingStatusFromTrackingStory = (billOfLading: string) => {\n    setBillOfLading(billOfLading);\n    setShowBillOfLadingStatus(true);\n    dispatch(getTrackingStatus(billOfLading));\n  };\n\n  const deleteBillOfLadingFromTrackingStory = (billOfLading: string) => {\n    dispatch(deleteTBillOfLadingStory(billOfLading));\n    setShowBillOfLadingStatus(false);\n    setBillOfLading(\"\");\n  };\n\n  const sidebarHandler = () => {\n    setIsSideBarOpen((state) => !state);\n  };\n\n  return (\n    <>\n      <Header />\n      <main>\n        <section>\n          <Typography\n            aria-label=\"Заголовок секцii перевірити ТТН\"\n            variant=\"h1\"\n            component={\"h1\"}\n            sx={{ display: \"none\" }}\n          >\n            Перевірити ТТН\n          </Typography>\n\n          <TrackingStory\n            getBillOfLadingStatusFromTrackingStory={\n              getBillOfLadingStatusFromTrackingStory\n            }\n            deleteBillOfLadingFromTrackingStory={\n              deleteBillOfLadingFromTrackingStory\n            }\n            sidebarHandler={sidebarHandler}\n            isSideBarOpen={isSideBarOpen}\n          />\n\n          <Styled.MyContainer>\n            <TrackingForm\n              billOfLading={billOfLading}\n              onChange={onChange}\n              submitForm={submitForm}\n              sidebarHandler={sidebarHandler}\n            />\n            {trackingData.length > 0 && showBillOfLadingStatus && (\n              <TrackingData\n                setShowBillOfLadingStatus={setShowBillOfLadingStatus}\n              />\n            )}\n          </Styled.MyContainer>\n        </section>\n      </main>\n    </>\n  );\n};\n\nexport default PageCheckBillOfLading;\n"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","trackingDataSelector","state","trackingState","trackingData","data","Form","styled","marginBottom","width","maxWidth","minHeight","display","flexDirection","alignItems","justifyContent","Input","TextField","_ref","onChange","billOfLading","submitForm","sidebarHandler","_jsxs","Styled","onSubmit","event","children","_jsx","variant","label","type","value","PrimaryButton","text","onClick","MyCard","Card","MyCardContent","CardContent","MyTextWrapper","Box","borderBottom","paddingBottom","MyTitle","Typography","color","concat","COLORS","fontSize","setShowBillOfLadingStatus","_ref2","WarehouseSender","Status","WarehouseRecipient","StatusCode","Number","deliveryStatus","CardActions","sx","Button","endIcon","VisibilityOffIcon","NumbersIcon","mr","component","DescriptionIcon","SystemUpdateAltIcon","PinDropIcon","billOfLadingDataSelector","billOfLadingState","billOfLadingStory","flexWrap","overflowY","overflowX","minWidth","ActionsWrapper","MyIconArrowBackSidebar","ArrowForwardIosIcon","transition","MyDrawer","Drawer","zIndex","MyStoryWrapper","getBillOfLadingStatusFromTrackingStory","deleteBillOfLadingFromTrackingStory","isSideBarOpen","dispatch","story","anchor","open","IconButton","clearTBillOfLadingStory","gutterBottom","length","mb","map","nanoid","Divider","MyContainer","Container","paddingTop","_useState","useState","_useState2","_slicedToArray","setBillOfLading","_useState3","_useState4","setIsSideBarOpen","_useState5","_useState6","showBillOfLadingStatus","_Fragment","Header","TrackingStory","getTrackingStatus","deleteTBillOfLadingStory","TrackingForm","currentTarget","preventDefault","test","toast","setTBillOfLadingStory","TrackingData"],"sourceRoot":""}