{"version":3,"file":"static/js/115.b12a3f5f.chunk.js","mappings":"gNAGaA,EAAiB,WAAH,OAASC,EAAAA,EAAAA,KAA2B,EAClDC,EAAkDC,EAAAA,E,0HCDlDC,EAAuB,SAACC,GAAa,OAChDA,EAAMC,cAAcC,aAAaC,IAAK,E,8BCD3BC,GAAOC,EAAAA,EAAAA,GAAO,OAAPA,CAAe,CACjCC,aAAc,OACdC,MAAO,OACPC,SAAU,QACVC,UAAW,QACXC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,kBAGLC,GAAQT,EAAAA,EAAAA,GAAOU,EAAAA,EAAPV,CAAkB,CACrCE,MAAO,OACPC,SAAU,QAEV,uCAAwC,CACtCA,SAAU,SAGZ,sBAAuB,CACrB,sCAAuC,CACrCF,aAAc,W,UCQpB,EA3BmD,SAAHU,GAKR,IAJtCC,EAAQD,EAARC,SACAC,EAAYF,EAAZE,aACAC,EAAUH,EAAVG,WACAC,EAAcJ,EAAdI,eAEA,OACEC,EAAAA,EAAAA,MAACC,EAAW,CAACC,SAAU,SAACC,GAAK,OAAKL,EAAWK,EAAM,EAACC,SAAA,EAClDC,EAAAA,EAAAA,KAACJ,EAAY,CACXK,QAAQ,WACRC,MAAM,2DACNC,KAAK,SACLC,MAAOZ,EACPD,SAAU,SAACO,GAAK,OAAKP,EAASO,EAAM,KAGtCE,EAAAA,EAAAA,KAACK,EAAAA,EAAa,CAACC,KAAK,2GAAsBH,KAAK,YAE/CH,EAAAA,EAAAA,KAACK,EAAAA,EAAa,CACZC,KAAK,kHACLH,KAAK,SACLI,QAAS,kBAAMb,GAAgB,MAIvC,E,qHCzBac,GAAS7B,EAAAA,EAAAA,GAAO8B,EAAAA,EAAP9B,CAAa,CACjCE,MAAO,OACPE,UAAW,QACXD,SAAU,UAGC4B,GAAgB/B,EAAAA,EAAAA,GAAOgC,EAAAA,EAAPhC,CAAoB,CAC/C,sBAAuB,CACrBC,aAAc,YAILgC,GAAgBjC,EAAAA,EAAAA,GAAOkC,EAAAA,EAAPlC,CAAY,CACvCmC,aAAc,+BACdC,cAAe,QAGJC,GAAUrC,EAAAA,EAAAA,GAAOsC,EAAAA,EAAPtC,CAAmB,CACxCuC,MAAM,GAADC,OAAKC,EAAAA,EAAAA,aACVpC,QAAS,OACTE,WAAY,SAEZ,uBAAwB,CACtBmC,SAAU,UCgDd,EAhEoC,SAAH/B,GAA4C,IAAtCgC,EAAyBhC,EAAzBgC,0BAGrCC,GAFqBpD,EAAAA,EAAAA,GAAeE,GAGrB,IAAM,CAAC,EADdmD,EAAeD,EAAfC,gBAAiBC,EAAMF,EAANE,OAAQC,EAAkBH,EAAlBG,mBAAoBC,EAAUJ,EAAVI,WAAYC,EAAML,EAANK,OAG3DC,EACW,MAAfF,EAAkB,uBAAAR,OAAWS,EAAM,0GAAAT,OAAgCM,GAErE,OACE9B,EAAAA,EAAAA,MAACC,EAAa,CAAAG,SAAA,EACZC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAW,CAACC,GAAI,CAAE5C,eAAgB,YAAaY,UAC9CC,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CACLzB,QAAS,kBAAMe,GAA0B,EAAM,EAC/CW,SAASjC,EAAAA,EAAAA,KAACkC,EAAAA,EAAiB,IAAInC,SAChC,8DAIHJ,EAAAA,EAAAA,MAACC,EAAoB,CAAAG,SAAA,EAEnBJ,EAAAA,EAAAA,MAACC,EAAoB,CAAAG,SAAA,EACnBJ,EAAAA,EAAAA,MAACC,EAAc,CAAAG,SAAA,EACbC,EAAAA,EAAAA,KAACmC,EAAAA,EAAW,CAACJ,GAAI,CAAEK,GAAI,UAAY,2BAErCpC,EAAAA,EAAAA,KAACiB,EAAAA,EAAU,CAAChB,QAAQ,KAAKoC,UAAW,IAAItC,SACrC6B,QAKLjC,EAAAA,EAAAA,MAACC,EAAoB,CAAAG,SAAA,EACnBJ,EAAAA,EAAAA,MAACC,EAAc,CAAAG,SAAA,EACbC,EAAAA,EAAAA,KAACsC,EAAAA,EAAe,CAACP,GAAI,CAAEK,GAAI,UAAY,8FAEzCpC,EAAAA,EAAAA,KAACiB,EAAAA,EAAU,CAAChB,QAAQ,KAAKoC,UAAW,IAAItC,SACrC8B,QAKLlC,EAAAA,EAAAA,MAACC,EAAoB,CAAAG,SAAA,EACnBJ,EAAAA,EAAAA,MAACC,EAAc,CAAAG,SAAA,EACbC,EAAAA,EAAAA,KAACuC,EAAAA,EAAmB,CAACR,GAAI,CAAEK,GAAI,UAAY,qEAE7CpC,EAAAA,EAAAA,KAACiB,EAAAA,EAAU,CAAChB,QAAQ,KAAKoC,UAAW,IAAItC,SACrCyB,GAAmB,yHAKxB7B,EAAAA,EAAAA,MAACkB,EAAAA,EAAG,CAAAd,SAAA,EACFJ,EAAAA,EAAAA,MAACC,EAAc,CAAAG,SAAA,EACbC,EAAAA,EAAAA,KAACwC,EAAAA,EAAW,CAACT,GAAI,CAAEK,GAAI,UAAY,+DAErCpC,EAAAA,EAAAA,KAACiB,EAAAA,EAAU,CAAChB,QAAQ,KAAKoC,UAAW,IAAItC,SACrC2B,GAAsB,6HAMnC,E,UCxEae,EAA2B,SAACnE,GAAa,OACpDA,EAAMoE,kBAAkBC,iBAAkB,E,wCCI/BjC,GAAgB/B,EAAAA,EAAAA,GAAOgC,EAAAA,EAAPhC,CAAoB,CAC/CK,QAAS,OACT4D,SAAU,SACV3D,cAAe,SAEf4D,UAAW,OACXC,UAAW,SAEXjE,MAAO,OACPkE,SAAU,UAGCC,GAAiBrE,EAAAA,EAAAA,GAAOkC,EAAAA,EAAPlC,CAAY,CACxCK,QAAS,OACTG,eAAgB,gBAChBP,aAAc,SAGHqE,GAAyBtE,EAAAA,EAAAA,GAAOuE,EAAAA,EAAPvE,CAA4B,CAChEuC,MAAM,GAADC,OAAKC,EAAAA,EAAAA,cACV+B,WAAY,mBACZ,UAAW,CACTjC,MAAM,GAADC,OAAKC,EAAAA,EAAAA,gBAIDgC,GAAWzE,EAAAA,EAAAA,GAAO0E,EAAAA,GAAP1E,CAAe,CACrC,mBAAoB,CAClB2E,OAAQ,WAICC,GAAiB5E,EAAAA,EAAAA,GAAOkC,EAAAA,EAAPlC,CAAY,CACxCK,QAAS,OACTG,eAAgB,gBAChB,oBAAqB,CACnBP,aAAc,UC6BlB,EAzDqD,SAAHU,GAKtB,IAJ1BkE,EAAsClE,EAAtCkE,uCACAC,EAAmCnE,EAAnCmE,oCACA/D,EAAcJ,EAAdI,eACAgE,EAAapE,EAAboE,cAEMC,GAAW1F,EAAAA,EAAAA,KAEX2F,GAAQzF,EAAAA,EAAAA,GAAesE,GAE7B,OACEzC,EAAAA,EAAAA,KAACJ,EAAe,CAACiE,OAAO,QAAQC,KAAMJ,EAAezD,QAAQ,YAAWF,UACtEJ,EAAAA,EAAAA,MAACC,EAAoB,CAAAG,SAAA,EACnBJ,EAAAA,EAAAA,MAACC,EAAqB,CAAAG,SAAA,EACpBC,EAAAA,EAAAA,KAAC+D,EAAAA,EAAU,CAACxD,QAAS,kBAAMb,GAAgB,EAAE,aAAW,OAAMK,UAC5DC,EAAAA,EAAAA,KAACJ,EAA6B,OAGhCI,EAAAA,EAAAA,KAACK,EAAAA,EAAa,CACZC,KAAK,4GACLH,KAAK,SACLI,QAAS,kBAAMoD,GAASK,EAAAA,EAAAA,MAA0B,QAItDhE,EAAAA,EAAAA,KAACiB,EAAAA,EAAU,CAAChB,QAAQ,KAAKoC,UAAU,IAAI4B,cAAY,EAAAlE,SAAC,gDAGnD6D,EAAMM,OAAS,IACdlE,EAAAA,EAAAA,KAACiB,EAAAA,EAAU,CAACC,MAAO,WAAYmB,UAAU,IAAIN,GAAI,CAAEoC,GAAI,QAASpE,SAAC,+NAKlE6D,EAAMQ,KAAI,SAAC5E,GAAoB,OAC9BG,EAAAA,EAAAA,MAACC,EAAqB,CAAAG,SAAA,EACpBC,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CACLzB,QAAS,kBACPiD,EAAuChE,EAAa,EACrDO,UAEDJ,EAAAA,EAAAA,MAACsB,EAAAA,EAAU,CAAChB,QAAQ,QAAOF,SAAA,CAAC,wBAAOP,QAErCQ,EAAAA,EAAAA,KAACK,EAAAA,EAAa,CACZF,KAAK,SACLG,KAAK,mDACLC,QAAS,kBAAMkD,EAAoCjE,EAAa,OAXxC6E,EAAAA,EAAAA,MAaJ,KAG1BrE,EAAAA,EAAAA,KAACsE,EAAAA,EAAO,QAIhB,E,oBCnEaC,GAAc5F,EAAAA,EAAAA,GAAO6F,EAAAA,EAAP7F,CAAkB,CAC3C8F,WAAY,OACZ1D,cAAe,OAEf,sBAAuB,CACrB/B,QAAS,OACTC,cAAe,SACfC,WAAY,Y,UC6GhB,EAvFkC,WAChC,IAAAwF,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7ClF,EAAYoF,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAA0CJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAlDrB,EAAasB,EAAA,GAAEC,EAAgBD,EAAA,GACtCE,GACEP,EAAAA,EAAAA,WAAkB,GAAKQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GADlBE,EAAsBD,EAAA,GAAE7D,EAAyB6D,EAAA,GAGlDxB,GAAW1F,EAAAA,EAAAA,KAEXO,GAAeL,EAAAA,EAAAA,GAAeE,GA+B9BqB,EAAiB,WACrBuF,GAAiB,SAAC3G,GAAK,OAAMA,CAAK,GACpC,EAEA,OACEqB,EAAAA,EAAAA,MAAA0F,EAAAA,SAAA,CAAAtF,SAAA,EACEC,EAAAA,EAAAA,KAACsF,EAAAA,GAAM,KACPtF,EAAAA,EAAAA,KAAA,QAAAD,UACEJ,EAAAA,EAAAA,MAAA,WAAAI,SAAA,EACEC,EAAAA,EAAAA,KAACiB,EAAAA,EAAU,CACT,aAAW,oKACXhB,QAAQ,KACRoC,UAAW,KACXN,GAAI,CAAE/C,QAAS,QAASe,SACzB,qFAIDC,EAAAA,EAAAA,KAACuF,EAAa,CACZ/B,uCA/BqC,SAAChE,GAC9CsF,EAAgBtF,GAChB8B,GAA0B,GAC1BqC,GAAS6B,EAAAA,EAAAA,GAAkBhG,GAC7B,EA8BUiE,oCA5BkC,SAACjE,GAC3CmE,GAAS8B,EAAAA,EAAAA,IAAyBjG,IAClC8B,GAA0B,GAC1BwD,EAAgB,GAClB,EA2BUpF,eAAgBA,EAChBgE,cAAeA,KAGjB/D,EAAAA,EAAAA,MAACC,EAAkB,CAAAG,SAAA,EACjBC,EAAAA,EAAAA,KAAC0F,EAAY,CACXlG,aAAcA,EACdD,SA7DK,SAACO,GAChBgF,EAAgBhF,EAAM6F,cAAcvF,MACtC,EA4DYX,WA1DO,SAACK,GAClBA,EAAM8F,iBAGN,IAFc,WAEHC,KAAKrG,GACd,OAAOsG,EAAAA,GAAAA,KAAW,iKAEpBhB,EAAgB,IAChBxD,GAA0B,GAC1BqC,GAASoC,EAAAA,EAAAA,IAAsBvG,IAC/BmE,GAAS6B,EAAAA,EAAAA,GAAkBhG,GAC7B,EAgDYE,eAAgBA,IAEjBlB,EAAa0F,OAAS,GAAKkB,IAC1BpF,EAAAA,EAAAA,KAACgG,EAAY,CACX1E,0BAA2BA,cAQ3C,C","sources":["hooks/reduxHooks.ts","redux/selectors/trackingSelectors.ts","components/Tracking/TrackingForm/TrackingForm.styled.ts","components/Tracking/TrackingForm/TrackingForm.tsx","components/Tracking/TrackingData/TrackingData.styled.ts","components/Tracking/TrackingData/TrackingData.tsx","redux/selectors/billOfLadingSelectors.ts","components/Tracking/TrackingStory/TrackingStory.styled.ts","components/Tracking/TrackingStory/TrackingStory.tsx","pages/PageCheckBillOfLading/PageCheckBillOfLading.styles.ts","pages/PageCheckBillOfLading/PageCheckBillOfLading.tsx"],"sourcesContent":["import { useDispatch, useSelector, TypedUseSelectorHook } from \"react-redux\";\r\nimport type { RootState, AppDispatch } from \"../redux/store/store\";\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { IState } from \"../../types/redux.types\";\r\nimport { ObjectData } from \"../../types/redux.types\";\r\n\r\nexport const trackingDataSelector = (state: IState): ObjectData | [] =>\r\n  state.trackingState.trackingData.data;\r\n\r\nexport const trackingLoadingSelector = (state: IState): boolean =>\r\n  state.trackingState.loading;\r\n","import { styled } from \"@mui/styles\";\r\nimport { TextField } from \"@mui/material\";\r\n\r\nexport const Form = styled(\"form\")({\r\n  marginBottom: \"3rem\",\r\n  width: \"100%\",\r\n  maxWidth: \"468px\",\r\n  minHeight: \"200px\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"space-between\",\r\n});\r\n\r\nexport const Input = styled(TextField)({\r\n  width: \"100%\",\r\n  maxWidth: \"400px\",\r\n\r\n  \"@media screen and (min-width:1100px)\": {\r\n    maxWidth: \"600px\",\r\n  },\r\n\r\n  \"&.MuiTextField-root\": {\r\n    \"@media screen and (max-width:767px)\": {\r\n      marginBottom: \"1rem\",\r\n    },\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { ITrackingFormProps } from \"../../../types/tracking-components.types\";\r\nimport PrimaryButton from \"../../Common/PrimaryButton/PrimaryButton\";\r\nimport * as Styled from \"./TrackingForm.styled\";\r\n\r\nconst TrackingForm: React.FC<ITrackingFormProps> = ({\r\n  onChange,\r\n  billOfLading,\r\n  submitForm,\r\n  sidebarHandler,\r\n}: ITrackingFormProps): JSX.Element => {\r\n  return (\r\n    <Styled.Form onSubmit={(event) => submitForm(event)}>\r\n      <Styled.Input\r\n        variant=\"outlined\"\r\n        label=\"Введiть ТТН\"\r\n        type=\"number\"\r\n        value={billOfLading}\r\n        onChange={(event) => onChange(event)}\r\n      />\r\n\r\n      <PrimaryButton text=\"Отримати статус ТТН\" type=\"submit\" />\r\n\r\n      <PrimaryButton\r\n        text=\"Iсторія введенних ТТН\"\r\n        type=\"button\"\r\n        onClick={() => sidebarHandler()}\r\n      />\r\n    </Styled.Form>\r\n  );\r\n};\r\n\r\nexport default TrackingForm;\r\n","import { styled } from \"@mui/styles\";\r\nimport { CardContent, Card, Box, Typography } from \"@mui/material\";\r\n\r\nimport { COLORS } from \"../../../services/consts/theme/colors.conts\";\r\n\r\nexport const MyCard = styled(Card)({\r\n  width: \"100%\",\r\n  minHeight: \"312px\",\r\n  maxWidth: \"468px\",\r\n});\r\n\r\nexport const MyCardContent = styled(CardContent)({\r\n  \"& :not(:last-child)\": {\r\n    marginBottom: \"0.8rem\",\r\n  },\r\n});\r\n\r\nexport const MyTextWrapper = styled(Box)({\r\n  borderBottom: \"1px solid rgba(0, 0, 0, 0.6)\",\r\n  paddingBottom: \"5px\",\r\n});\r\n\r\nexport const MyTitle = styled(Typography)({\r\n  color: `${COLORS.accentColor}`,\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n\r\n  \"&.MuiTypography-root\": {\r\n    fontSize: \"20px\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { Box, Button, CardActions, Typography } from \"@mui/material\";\r\nimport { useAppSelector } from \"../../../hooks/reduxHooks\";\r\nimport { trackingDataSelector } from \"../../../redux/selectors/trackingSelectors\";\r\nimport DescriptionIcon from \"@mui/icons-material/Description\";\r\nimport SystemUpdateAltIcon from \"@mui/icons-material/SystemUpdateAlt\";\r\nimport PinDropIcon from \"@mui/icons-material/PinDrop\";\r\nimport NumbersIcon from \"@mui/icons-material/Numbers\";\r\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\r\n\r\nimport * as Styled from \"./TrackingData.styled\";\r\n\r\nconst TrackingData: React.FC<any> = ({ setShowBillOfLadingStatus }: any) => {\r\n  const trackingData = useAppSelector(trackingDataSelector);\r\n\r\n  const { WarehouseSender, Status, WarehouseRecipient, StatusCode, Number } =\r\n    trackingData[0] || {};\r\n\r\n  const deliveryStatus =\r\n    StatusCode === \"3\" ? `ТТН: ${Number} Не знайдений у базi...` : ` ${Status}`;\r\n\r\n  return (\r\n    <Styled.MyCard>\r\n      <CardActions sx={{ justifyContent: \"flex-end\" }}>\r\n        <Button\r\n          onClick={() => setShowBillOfLadingStatus(false)}\r\n          endIcon={<VisibilityOffIcon />}\r\n        >\r\n          Приховати\r\n        </Button>\r\n      </CardActions>\r\n      <Styled.MyCardContent>\r\n        {/* BillOFLading */}\r\n        <Styled.MyTextWrapper>\r\n          <Styled.MyTitle>\r\n            <NumbersIcon sx={{ mr: \"10px\" }} /> ТТН:\r\n          </Styled.MyTitle>\r\n          <Typography variant=\"h6\" component={\"p\"}>\r\n            {Number}\r\n          </Typography>\r\n        </Styled.MyTextWrapper>\r\n\r\n        {/* Delivery Status */}\r\n        <Styled.MyTextWrapper>\r\n          <Styled.MyTitle>\r\n            <DescriptionIcon sx={{ mr: \"10px\" }} /> Статус доставки:\r\n          </Styled.MyTitle>\r\n          <Typography variant=\"h6\" component={\"p\"}>\r\n            {deliveryStatus}\r\n          </Typography>\r\n        </Styled.MyTextWrapper>\r\n\r\n        {/* Sender */}\r\n        <Styled.MyTextWrapper>\r\n          <Styled.MyTitle>\r\n            <SystemUpdateAltIcon sx={{ mr: \"10px\" }} /> Відправник:\r\n          </Styled.MyTitle>\r\n          <Typography variant=\"h6\" component={\"p\"}>\r\n            {WarehouseSender || \"Інформація відсутня...\"}\r\n          </Typography>\r\n        </Styled.MyTextWrapper>\r\n\r\n        {/* Recipient */}\r\n        <Box>\r\n          <Styled.MyTitle>\r\n            <PinDropIcon sx={{ mr: \"10px\" }} /> Одержувач:\r\n          </Styled.MyTitle>\r\n          <Typography variant=\"h6\" component={\"p\"}>\r\n            {WarehouseRecipient || \"Інформація відсутня...\"}\r\n          </Typography>\r\n        </Box>\r\n      </Styled.MyCardContent>\r\n    </Styled.MyCard>\r\n  );\r\n};\r\n\r\nexport default TrackingData;\r\n","import { IState } from \"../../types/redux.types\";\r\n\r\nexport const billOfLadingDataSelector = (state: IState): [] | string[] =>\r\n  state.billOfLadingState.billOfLadingStory;\r\n","import { styled } from \"@mui/styles\";\r\nimport { CardContent, Box, Drawer } from \"@mui/material\";\r\n\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\n\r\nimport { COLORS } from \"../../../services/consts/theme/colors.conts\";\r\n\r\nexport const MyCardContent = styled(CardContent)({\r\n  display: \"flex\",\r\n  flexWrap: \"nowrap\",\r\n  flexDirection: \"column\",\r\n\r\n  overflowY: \"auto\",\r\n  overflowX: \"hidden\",\r\n\r\n  width: \"100%\",\r\n  minWidth: \"320px\",\r\n});\r\n\r\nexport const ActionsWrapper = styled(Box)({\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  marginBottom: \"2rem\",\r\n});\r\n\r\nexport const MyIconArrowBackSidebar = styled(ArrowForwardIosIcon)({\r\n  color: `${COLORS.primaryColor}`,\r\n  transition: \"all 250ms linear\",\r\n  \"&:hover\": {\r\n    color: `${COLORS.accentColor}`,\r\n  },\r\n});\r\n\r\nexport const MyDrawer = styled(Drawer)({\r\n  \"&.MuiDrawer-root\": {\r\n    zIndex: 9999999,\r\n  },\r\n});\r\n\r\nexport const MyStoryWrapper = styled(Box)({\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  \"&:not(last-child)\": {\r\n    marginBottom: \"1rem\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../../../hooks/reduxHooks\";\r\nimport { clearTBillOfLadingStory } from \"../../../redux/slices/billOfLadingSlice\";\r\nimport { billOfLadingDataSelector } from \"../../../redux/selectors/billOfLadingSelectors\";\r\n\r\nimport { ITrackingStoryProps } from \"../../../types/tracking-components.types\";\r\n\r\nimport { Typography, Button, Divider, IconButton } from \"@mui/material\";\r\n\r\nimport PrimaryButton from \"../../Common/PrimaryButton/PrimaryButton\";\r\n\r\nimport * as Styled from \"./TrackingStory.styled\";\r\n\r\nconst TrackingStory: React.FC<ITrackingStoryProps> = ({\r\n  getBillOfLadingStatusFromTrackingStory,\r\n  deleteBillOfLadingFromTrackingStory,\r\n  sidebarHandler,\r\n  isSideBarOpen,\r\n}: ITrackingStoryProps) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const story = useAppSelector(billOfLadingDataSelector);\r\n\r\n  return (\r\n    <Styled.MyDrawer anchor=\"right\" open={isSideBarOpen} variant=\"temporary\">\r\n      <Styled.MyCardContent>\r\n        <Styled.ActionsWrapper>\r\n          <IconButton onClick={() => sidebarHandler()} aria-label=\"hide\">\r\n            <Styled.MyIconArrowBackSidebar />\r\n          </IconButton>\r\n\r\n          <PrimaryButton\r\n            text=\"Очистити iсторію ТТН\"\r\n            type=\"button\"\r\n            onClick={() => dispatch(clearTBillOfLadingStory())}\r\n          />\r\n        </Styled.ActionsWrapper>\r\n\r\n        <Typography variant=\"h5\" component=\"p\" gutterBottom>\r\n          Історія:\r\n        </Typography>\r\n        {story.length > 0 && (\r\n          <Typography color={\"darkgray\"} component=\"p\" sx={{ mb: \"2rem\" }}>\r\n            * натисніть на ТТН, щоб отримати інформацію\r\n          </Typography>\r\n        )}\r\n\r\n        {story.map((billOfLading: string) => (\r\n          <Styled.MyStoryWrapper key={nanoid()}>\r\n            <Button\r\n              onClick={() =>\r\n                getBillOfLadingStatusFromTrackingStory(billOfLading)\r\n              }\r\n            >\r\n              <Typography variant=\"body1\">ТТН : {billOfLading}</Typography>\r\n            </Button>\r\n            <PrimaryButton\r\n              type=\"button\"\r\n              text=\"Видалити\"\r\n              onClick={() => deleteBillOfLadingFromTrackingStory(billOfLading)}\r\n            />\r\n          </Styled.MyStoryWrapper>\r\n        ))}\r\n\r\n        <Divider />\r\n      </Styled.MyCardContent>\r\n    </Styled.MyDrawer>\r\n  );\r\n};\r\n\r\nexport default TrackingStory;\r\n","import { styled } from \"@mui/styles\";\r\nimport { Container } from \"@mui/material\";\r\n\r\nexport const MyContainer = styled(Container)({\r\n  paddingTop: \"3rem\",\r\n  paddingBottom: \"3rem\",\r\n\r\n  \"&.MuiContainer-root\": {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n","import React, { FC, useState } from \"react\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks/reduxHooks\";\r\n\r\nimport {\r\n  setTBillOfLadingStory,\r\n  deleteTBillOfLadingStory,\r\n} from \"../../redux/slices/billOfLadingSlice\";\r\n\r\nimport { getTrackingStatus } from \"../../redux/operations/trackingOperations\";\r\n\r\nimport { trackingDataSelector } from \"../../redux/selectors/trackingSelectors\";\r\n\r\nimport {\r\n  EventOnChange,\r\n  EventOnSubmit,\r\n} from \"../../types/tracking-components.types\";\r\n\r\nimport {\r\n  TrackingForm,\r\n  TrackingData,\r\n  TrackingStory,\r\n} from \"../../components/Tracking\";\r\n\r\nimport { Header } from \"../../components/Common\";\r\n\r\nimport * as Styled from \"./PageCheckBillOfLading.styles\";\r\n\r\nimport { Typography } from \"@mui/material\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst PageCheckBillOfLading: FC = () => {\r\n  const [billOfLading, setBillOfLading] = useState(\"\");\r\n  const [isSideBarOpen, setIsSideBarOpen] = useState(false);\r\n  const [showBillOfLadingStatus, setShowBillOfLadingStatus] =\r\n    useState<boolean>(true);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const trackingData = useAppSelector(trackingDataSelector);\r\n\r\n  const onChange = (event: EventOnChange) => {\r\n    setBillOfLading(event.currentTarget.value);\r\n  };\r\n\r\n  const submitForm = (event: EventOnSubmit) => {\r\n    event.preventDefault();\r\n    const regex = /^\\d{14}$/;\r\n\r\n    if (!regex.test(billOfLading))\r\n      return toast.warn(\"ТТН повинен складатися з 14 цифр\");\r\n\r\n    setBillOfLading(\"\");\r\n    setShowBillOfLadingStatus(true);\r\n    dispatch(setTBillOfLadingStory(billOfLading));\r\n    dispatch(getTrackingStatus(billOfLading));\r\n  };\r\n\r\n  const getBillOfLadingStatusFromTrackingStory = (billOfLading: string) => {\r\n    setBillOfLading(billOfLading);\r\n    setShowBillOfLadingStatus(true);\r\n    dispatch(getTrackingStatus(billOfLading));\r\n  };\r\n\r\n  const deleteBillOfLadingFromTrackingStory = (billOfLading: string) => {\r\n    dispatch(deleteTBillOfLadingStory(billOfLading));\r\n    setShowBillOfLadingStatus(false);\r\n    setBillOfLading(\"\");\r\n  };\r\n\r\n  const sidebarHandler = () => {\r\n    setIsSideBarOpen((state) => !state);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <section>\r\n          <Typography\r\n            aria-label=\"Заголовок секцii перевірити ТТН\"\r\n            variant=\"h1\"\r\n            component={\"h1\"}\r\n            sx={{ display: \"none\" }}\r\n          >\r\n            Перевірити ТТН\r\n          </Typography>\r\n\r\n          <TrackingStory\r\n            getBillOfLadingStatusFromTrackingStory={\r\n              getBillOfLadingStatusFromTrackingStory\r\n            }\r\n            deleteBillOfLadingFromTrackingStory={\r\n              deleteBillOfLadingFromTrackingStory\r\n            }\r\n            sidebarHandler={sidebarHandler}\r\n            isSideBarOpen={isSideBarOpen}\r\n          />\r\n\r\n          <Styled.MyContainer>\r\n            <TrackingForm\r\n              billOfLading={billOfLading}\r\n              onChange={onChange}\r\n              submitForm={submitForm}\r\n              sidebarHandler={sidebarHandler}\r\n            />\r\n            {trackingData.length > 0 && showBillOfLadingStatus && (\r\n              <TrackingData\r\n                setShowBillOfLadingStatus={setShowBillOfLadingStatus}\r\n              />\r\n            )}\r\n          </Styled.MyContainer>\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PageCheckBillOfLading;\r\n"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","trackingDataSelector","state","trackingState","trackingData","data","Form","styled","marginBottom","width","maxWidth","minHeight","display","flexDirection","alignItems","justifyContent","Input","TextField","_ref","onChange","billOfLading","submitForm","sidebarHandler","_jsxs","Styled","onSubmit","event","children","_jsx","variant","label","type","value","PrimaryButton","text","onClick","MyCard","Card","MyCardContent","CardContent","MyTextWrapper","Box","borderBottom","paddingBottom","MyTitle","Typography","color","concat","COLORS","fontSize","setShowBillOfLadingStatus","_ref2","WarehouseSender","Status","WarehouseRecipient","StatusCode","Number","deliveryStatus","CardActions","sx","Button","endIcon","VisibilityOffIcon","NumbersIcon","mr","component","DescriptionIcon","SystemUpdateAltIcon","PinDropIcon","billOfLadingDataSelector","billOfLadingState","billOfLadingStory","flexWrap","overflowY","overflowX","minWidth","ActionsWrapper","MyIconArrowBackSidebar","ArrowForwardIosIcon","transition","MyDrawer","Drawer","zIndex","MyStoryWrapper","getBillOfLadingStatusFromTrackingStory","deleteBillOfLadingFromTrackingStory","isSideBarOpen","dispatch","story","anchor","open","IconButton","clearTBillOfLadingStory","gutterBottom","length","mb","map","nanoid","Divider","MyContainer","Container","paddingTop","_useState","useState","_useState2","_slicedToArray","setBillOfLading","_useState3","_useState4","setIsSideBarOpen","_useState5","_useState6","showBillOfLadingStatus","_Fragment","Header","TrackingStory","getTrackingStatus","deleteTBillOfLadingStory","TrackingForm","currentTarget","preventDefault","test","toast","setTBillOfLadingStory","TrackingData"],"sourceRoot":""}